"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[8038],{3905:(a,n,e)=>{e.d(n,{Zo:()=>o,kt:()=>g});var i=e(67294);function t(a,n,e){return n in a?Object.defineProperty(a,n,{value:e,enumerable:!0,configurable:!0,writable:!0}):a[n]=e,a}function r(a,n){var e=Object.keys(a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(a);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(a,n).enumerable}))),e.push.apply(e,i)}return e}function l(a){for(var n=1;n<arguments.length;n++){var e=null!=arguments[n]?arguments[n]:{};n%2?r(Object(e),!0).forEach((function(n){t(a,n,e[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(a,Object.getOwnPropertyDescriptors(e)):r(Object(e)).forEach((function(n){Object.defineProperty(a,n,Object.getOwnPropertyDescriptor(e,n))}))}return a}function u(a,n){if(null==a)return{};var e,i,t=function(a,n){if(null==a)return{};var e,i,t={},r=Object.keys(a);for(i=0;i<r.length;i++)e=r[i],n.indexOf(e)>=0||(t[e]=a[e]);return t}(a,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(a);for(i=0;i<r.length;i++)e=r[i],n.indexOf(e)>=0||Object.prototype.propertyIsEnumerable.call(a,e)&&(t[e]=a[e])}return t}var k=i.createContext({}),d=function(a){var n=i.useContext(k),e=n;return a&&(e="function"==typeof a?a(n):l(l({},n),a)),e},o=function(a){var n=d(a.components);return i.createElement(k.Provider,{value:n},a.children)},s="mdxType",p={inlineCode:"code",wrapper:function(a){var n=a.children;return i.createElement(i.Fragment,{},n)}},m=i.forwardRef((function(a,n){var e=a.components,t=a.mdxType,r=a.originalType,k=a.parentName,o=u(a,["components","mdxType","originalType","parentName"]),s=d(e),m=t,g=s["".concat(k,".").concat(m)]||s[m]||p[m]||r;return e?i.createElement(g,l(l({ref:n},o),{},{components:e})):i.createElement(g,l({ref:n},o))}));function g(a,n){var e=arguments,t=n&&n.mdxType;if("string"==typeof a||t){var r=e.length,l=new Array(r);l[0]=m;var u={};for(var k in n)hasOwnProperty.call(n,k)&&(u[k]=n[k]);u.originalType=a,u[s]="string"==typeof a?a:t,l[1]=u;for(var d=2;d<r;d++)l[d]=e[d];return i.createElement.apply(null,l)}return i.createElement.apply(null,e)}m.displayName="MDXCreateElement"},85162:(a,n,e)=>{e.d(n,{Z:()=>l});var i=e(67294),t=e(86010);const r={tabItem:"tabItem_Ymn6"};function l(a){let{children:n,hidden:e,className:l}=a;return i.createElement("div",{role:"tabpanel",className:(0,t.Z)(r.tabItem,l),hidden:e},n)}},74866:(a,n,e)=>{e.d(n,{Z:()=>v});var i=e(87462),t=e(67294),r=e(86010),l=e(12466),u=e(16550),k=e(91980),d=e(67392),o=e(50012);function s(a){return function(a){return t.Children.map(a,(a=>{if((0,t.isValidElement)(a)&&"value"in a.props)return a;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof a.type?a.type:a.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(a).map((a=>{let{props:{value:n,label:e,attributes:i,default:t}}=a;return{value:n,label:e,attributes:i,default:t}}))}function p(a){const{values:n,children:e}=a;return(0,t.useMemo)((()=>{const a=n??s(e);return function(a){const n=(0,d.l)(a,((a,n)=>a.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((a=>a.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(a),a}),[n,e])}function m(a){let{value:n,tabValues:e}=a;return e.some((a=>a.value===n))}function g(a){let{queryString:n=!1,groupId:e}=a;const i=(0,u.k6)(),r=function(a){let{queryString:n=!1,groupId:e}=a;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!e)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return e??null}({queryString:n,groupId:e});return[(0,k._X)(r),(0,t.useCallback)((a=>{if(!r)return;const n=new URLSearchParams(i.location.search);n.set(r,a),i.replace({...i.location,search:n.toString()})}),[r,i])]}function c(a){const{defaultValue:n,queryString:e=!1,groupId:i}=a,r=p(a),[l,u]=(0,t.useState)((()=>function(a){let{defaultValue:n,tabValues:e}=a;if(0===e.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:e}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${e.map((a=>a.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const i=e.find((a=>a.default))??e[0];if(!i)throw new Error("Unexpected error: 0 tabValues");return i.value}({defaultValue:n,tabValues:r}))),[k,d]=g({queryString:e,groupId:i}),[s,c]=function(a){let{groupId:n}=a;const e=function(a){return a?`docusaurus.tab.${a}`:null}(n),[i,r]=(0,o.Nk)(e);return[i,(0,t.useCallback)((a=>{e&&r.set(a)}),[e,r])]}({groupId:i}),b=(()=>{const a=k??s;return m({value:a,tabValues:r})?a:null})();(0,t.useLayoutEffect)((()=>{b&&u(b)}),[b]);return{selectedValue:l,selectValue:(0,t.useCallback)((a=>{if(!m({value:a,tabValues:r}))throw new Error(`Can't select invalid tab value=${a}`);u(a),d(a),c(a)}),[d,c,r]),tabValues:r}}var b=e(72389);const h={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function y(a){let{className:n,block:e,selectedValue:u,selectValue:k,tabValues:d}=a;const o=[],{blockElementScrollPositionUntilNextRender:s}=(0,l.o5)(),p=a=>{const n=a.currentTarget,e=o.indexOf(n),i=d[e].value;i!==u&&(s(n),k(i))},m=a=>{let n=null;switch(a.key){case"Enter":p(a);break;case"ArrowRight":{const e=o.indexOf(a.currentTarget)+1;n=o[e]??o[0];break}case"ArrowLeft":{const e=o.indexOf(a.currentTarget)-1;n=o[e]??o[o.length-1];break}}n?.focus()};return t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.Z)("tabs",{"tabs--block":e},n)},d.map((a=>{let{value:n,label:e,attributes:l}=a;return t.createElement("li",(0,i.Z)({role:"tab",tabIndex:u===n?0:-1,"aria-selected":u===n,key:n,ref:a=>o.push(a),onKeyDown:m,onClick:p},l,{className:(0,r.Z)("tabs__item",h.tabItem,l?.className,{"tabs__item--active":u===n})}),e??n)})))}function N(a){let{lazy:n,children:e,selectedValue:i}=a;if(e=Array.isArray(e)?e:[e],n){const a=e.find((a=>a.props.value===i));return a?(0,t.cloneElement)(a,{className:"margin-top--md"}):null}return t.createElement("div",{className:"margin-top--md"},e.map(((a,n)=>(0,t.cloneElement)(a,{key:n,hidden:a.props.value!==i}))))}function P(a){const n=c(a);return t.createElement("div",{className:(0,r.Z)("tabs-container",h.tabList)},t.createElement(y,(0,i.Z)({},a,n)),t.createElement(N,(0,i.Z)({},a,n)))}function v(a){const n=(0,b.Z)();return t.createElement(P,(0,i.Z)({key:String(n)},a))}},92675:(a,n,e)=>{e.r(n),e.d(n,{assets:()=>o,contentTitle:()=>k,default:()=>g,frontMatter:()=>u,metadata:()=>d,toc:()=>s});var i=e(87462),t=(e(67294),e(3905)),r=e(74866),l=e(85162);const u={sidebar_position:4},k="Tutorial 8 - Ultrasonic Distance Sensor",d={unversionedId:"tutorial-arduino/beginner-level/tutorial-8-ultrasonic-distance-sensor",id:"tutorial-arduino/beginner-level/tutorial-8-ultrasonic-distance-sensor",title:"Tutorial 8 - Ultrasonic Distance Sensor",description:"Apa itu Ultrasonic Distance Sensor?",source:"@site/docs/tutorial-arduino/beginner-level/tutorial-8-ultrasonic-distance-sensor.md",sourceDirName:"tutorial-arduino/beginner-level",slug:"/tutorial-arduino/beginner-level/tutorial-8-ultrasonic-distance-sensor",permalink:"/tutorials/tutorial-arduino/beginner-level/tutorial-8-ultrasonic-distance-sensor",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Tutorial 7 - Alarm Sensor Cahaya Lanjutan",permalink:"/tutorials/tutorial-arduino/beginner-level/tutorial-7-alarm-sensor-cahaya-lanjutan"},next:{title:"Tutorial 9 - Sensor Jarak Ultrasonik Lanjutan",permalink:"/tutorials/tutorial-arduino/beginner-level/tutorial-9-ultrasonic-distance-sensor-lanjutan"}},o={},s=[{value:"Apa itu Ultrasonic Distance Sensor?",id:"apa-itu-ultrasonic-distance-sensor",level:2},{value:"Menghitung Jarak",id:"menghitung-jarak",level:2},{value:"Mulai Beraksi \ud83d\ude80",id:"mulai-beraksi-",level:2},{value:"Menghubungkan Pin-Pin",id:"menghubungkan-pin-pin",level:3},{value:"Mengetik Program",id:"mengetik-program",level:3},{value:"Penjelasan Program",id:"penjelasan-program",level:2},{value:"Tantangan Tutorial 8",id:"tantangan-tutorial-8",level:2},{value:"Tantangan 1",id:"tantangan-1",level:3},{value:"Tantangan 2",id:"tantangan-2",level:3}],p={toc:s},m="wrapper";function g(a){let{components:n,...u}=a;return(0,t.kt)(m,(0,i.Z)({},p,u,{components:n,mdxType:"MDXLayout"}),(0,t.kt)("h1",{id:"tutorial-8---ultrasonic-distance-sensor"},"Tutorial 8 - Ultrasonic Distance Sensor"),(0,t.kt)("h2",{id:"apa-itu-ultrasonic-distance-sensor"},"Apa itu Ultrasonic Distance Sensor?"),(0,t.kt)("p",null,'Pada tutorial kali ini, kita akan mempelajari komponen baru, yakni Ultrasonic Distance Sensor. Nama tersebut terdiri dari tiga kata dalam bahasa Inggris, yakni "Ultrasonic", "Distance", "Sensor". Kata "Ultrasonic" berarti Ultrasonik, kata "Distance" berarti Jarak, dan kata "Sensor" juga kita terjemahkan sebagai "Sensor".'),(0,t.kt)("p",null,"Secara keseluruhan akan memiliki arti sebagai Sensor Jarak Ultrasonik. Komponen ini, sesuai namanya, digunakan untuk mengukur jarak dengan menggunakan prinsip kerja pantulan suara Ultrasonik."),(0,t.kt)("p",null,"Ultrasonik merupakan istilah yang digunakan untuk suara yang memiliki frekuensi di atas 20.000 Hz. Yang mana suara dengan frekuensi tinggi tersebut tidak bisa didengar oleh telinga manusia."),(0,t.kt)("p",null,"Ilustrasi pantulan suara ultrasonik yang dimaksud diilustrasikan seperti pada gambar di bawah ini."),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("img",{width:"80%",src:e(58872).Z,alt:"Arduino Light Sensor Pins"})),(0,t.kt)("p",null,'Komponen T merupakan singkatan dari "Transmitter" yang merupakan sebuah speaker mini untuk mentransmisikan atau mengeluarkan suara ultrasonik. Komponen R merupakan singkatan dari "Receiver" yang merupakan sebuah mikrofon mini untuk menangkap suara ultrasonik yang dipantulkan.'),(0,t.kt)("p",null,"Apabila ada halangan atau objek di depan sensor, suara ultrasonik yang dihasilkan oleh komponen T akan dipantulkan oleh halangan atau objek."),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("img",{width:"80%",src:e(91703).Z,alt:"Arduino Light Sensor Pins"})),(0,t.kt)("p",null,"Suara ultrasonik yang dipantulkan oleh objek atau halangan tadi kemudian ditangkap oleh komponen R."),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("img",{width:"80%",src:e(73998).Z,alt:"Arduino Light Sensor Pins"})),(0,t.kt)("p",null,"Waktu yang ditempuh oleh suara ultrasonik untuk berjalan bolak balik dari komponen T sampai ke komponen R direkam. Dan digunakan untuk menghitung jarak benda atau halangan yang memantulkan suara ultrasonik tadi dari sensor."),(0,t.kt)("h2",{id:"menghitung-jarak"},"Menghitung Jarak"),(0,t.kt)("p",null,"Sebagai contoh pada ilustrasi di atas, ketika suara ultrasonik pertama kali dikeluarkan dari komponen T kemudian sampai pada objek atau halangan, memakan waktu sekitar 250\xb5s."),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("img",{width:"80%",src:e(25734).Z,alt:"Arduino Light Sensor Pins"})),(0,t.kt)("p",null,"Kemudian suara ultrasonik dipantulkan dari objek/halangan dan sampai pada komponen R, membutuhkan waktu sekitar 250\xb5s."),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("img",{width:"80%",src:e(45854).Z,alt:"Arduino Light Sensor Pins"})),(0,t.kt)("p",null,"Maka total waktu yang ditempuh oleh suara ultrasonik untuk bolak balik dari komponen T ke objek/halangan kemudian dipantulkan ke komponen R, memakan waktu selama 500\xb5s."),(0,t.kt)("p",null,"Setelah diketahui total waktu yang ditempuh suara ultrasonik, kita kemudian menggunakan rumus di bawah ini"),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("p",null,"Jarak = Kecepatan x Waktu")),(0,t.kt)("p",null,"Kita sudah mengetahui Waktunya, yakni 500\xb5s. Sekarang kita harus mencari kecepatan suara ultrasonik yang merambat, yakni 340 m/s. Suara ultrasonik merambat di udara pada kecepatan 340 m/s. Kemudian kita ubah satuannya menjadi ke cm/\xb5s sehingga menjadi 0.034 cm/\xb5s."),(0,t.kt)("p",null,"Sekarang ktia sudah mengetahui Waktu dan Kecepatannya dan kita masukkan ke dalam persamaan."),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("p",null,"Jarak = 0.034 cm/\xb5s x 500\xb5s")),(0,t.kt)("p",null,"Disini kita hampir selesai menghitung jaraknya. Namun, karena kita tahu suara ultrasonik nya merambat dua kali, pertama dari komponen T ke objek/halangan. Kemudian dari objek/halangan ke komponen R, sehingga bisa dikatakan suara ultrasoniknya merambat dua kali. Dengan demikian, kita harus membagi persamaan di atas tadi dengan dua dan hasil finalnya akan menjadi:"),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("p",null,"Jarak = (0.034 cm/\xb5s x 500\xb5s) / 2")),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("p",null,"Jarak = 8.5 cm")),(0,t.kt)("p",null,"Dengan demikian, kita tahu jarak objek/halangan berada pada jarak sejauh 8.5 cm dari sensor."),(0,t.kt)("p",null,"Sensor Ultrasonik akan berguna untuk project yang membutuhkan pengukuran jarak ataupun untuk mendeteksi keberadaan benda/objek."),(0,t.kt)("p",null,"Mari kita belajar bagaimana memprogram sensor tersebut."),(0,t.kt)("h2",{id:"mulai-beraksi-"},"Mulai Beraksi \ud83d\ude80"),(0,t.kt)("p",null,"Baik, sebelum mulai beraksi, pastikan teman-teman sudah membaca Prasyarat, Target Pelajaran, dan Komponen Yang Dibutuhkan ya."),(0,t.kt)("p",null,"Klik pada salah satu dari ketiga tombol di bawah ini untuk membuka Prasyarat, Target Pelajaran dan Komponen Yang Dibutuhkan."),(0,t.kt)(r.Z,{className:"unique-tabs",mdxType:"Tabs"},(0,t.kt)(l.Z,{value:"Prasyarat \ud83d\udd11",mdxType:"TabItem"},(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Sudah lolos Tutorial 7 - Alarm Sensor Cahaya Lanjutan"),(0,t.kt)("li",{parentName:"ul"},"Sudah mempelajari Arduino Nano Expansion Board pada materi ",(0,t.kt)("strong",{parentName:"li"},(0,t.kt)("a",{parentName:"strong",href:"/tutorials/tutorial-arduino/arduino-hardware#arduino-nano-expansion-board"},"Arduino Nano Expansion Board")))),(0,t.kt)("p",null,"Kalau teman-teman merasa belum memenuhi prasyarat yang dibutuhkan, diharapkan untuk membaca dan memenuhinya terlebih dahulu.")),(0,t.kt)(l.Z,{value:"Target Pelajaran \ud83c\udfaf",mdxType:"TabItem"},(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Memahami bagaimana memprogram Sensor Jarak Ultrasonik"),(0,t.kt)("li",{parentName:"ul"},"Memahami bagaimana memasukkan rumus matematika ke dalam program"),(0,t.kt)("li",{parentName:"ul"},"Memahami urutan prioritas pengerjaan dalam program"))),(0,t.kt)(l.Z,{value:"Komponen Yang Dibutuhkan \ud83d\udee0",mdxType:"TabItem"},(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"1 x Arduino Nano"),(0,t.kt)("li",{parentName:"ul"},"1 x Kabel USB Arduino Nano"),(0,t.kt)("li",{parentName:"ul"},"1 x Komputer/Laptop"),(0,t.kt)("li",{parentName:"ul"},"1 x Sensor Jarak"),(0,t.kt)("li",{parentName:"ul"},"4 x Kabel Jumper Female-Female")))),(0,t.kt)("admonition",{title:"Perhatian",type:"caution"},(0,t.kt)("p",{parentName:"admonition"},"Penting untuk memperhatikan setiap langkah-langkah yang diberikan dan tidak melakukan apapun diluar perintah langkah yang diberikan."),(0,t.kt)("p",{parentName:"admonition"},"Kenapa? Hal ini untuk mencegah kerusakan yang tidak diinginkan pada komponen apabila bertindak di luar langkah pelajaran yang diberikan dan tidak mengetahui dengan pasti apa yang teman-teman lakukan.")),(0,t.kt)("h3",{id:"menghubungkan-pin-pin"},"Menghubungkan Pin-Pin"),(0,t.kt)("p",null,"Mari kita ikuti langkah-langkah yang disediakan."),(0,t.kt)("ol",null,(0,t.kt)("li",{parentName:"ol"},"Kita akan menghubungkan pin-pin Modul Sensor Jarak ke Arduino Nano dengan menggunakan kabel jumper seperti pada gambar Wiring Diagram di bawah ini.")),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("img",{width:"80%",src:e(58597).Z,alt:"Arduino Light Sensor Pins"})),(0,t.kt)("p",null,"Jika gambar Wiring Diagram di atas kurang jelas, teman-teman bisa gunakan tabel Wiring Diagram di bawah ini."),(0,t.kt)("table",null,(0,t.kt)("thead",{parentName:"table"},(0,t.kt)("tr",{parentName:"thead"},(0,t.kt)("th",{parentName:"tr",align:"center"},"Sensor Jarak"),(0,t.kt)("th",{parentName:"tr",align:"center"},"Arduino Nano Expansion Board"))),(0,t.kt)("tbody",{parentName:"table"},(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",{parentName:"tr",align:"center"},"VCC"),(0,t.kt)("td",{parentName:"tr",align:"center"},"V")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",{parentName:"tr",align:"center"},"Trig"),(0,t.kt)("td",{parentName:"tr",align:"center"},"8")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",{parentName:"tr",align:"center"},"Echo"),(0,t.kt)("td",{parentName:"tr",align:"center"},"9")),(0,t.kt)("tr",{parentName:"tbody"},(0,t.kt)("td",{parentName:"tr",align:"center"},"GND"),(0,t.kt)("td",{parentName:"tr",align:"center"},"G")))),(0,t.kt)("admonition",{title:"Peringatan",type:"danger"},(0,t.kt)("p",{parentName:"admonition"},"Sebelum menyalakan Arduino Nano, harap periksa kembali rangkaiannya. Apakah sudah sama dengan Wiring Diagram?"),(0,t.kt)("p",{parentName:"admonition"},"Periksa kembali posisi pemasangan kaki-kaki. Diharapkan agar tidak terbalik dan sesuai dengan keterangan pin agar tidak merusak komponen.")),(0,t.kt)("h3",{id:"mengetik-program"},"Mengetik Program"),(0,t.kt)("ol",{start:2},(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"Bukalah Arduino IDE, kemudian buatlah sketch baru. Beri sketch baru tersebut dengan nama TUTORIAL_8_SENSOR_JARAK dan simpan dalam folder ",(0,t.kt)("strong",{parentName:"p"},"Program Tutorials")," yang telah kita buat pada Tutorial 1 sebelumnya. Jika terlupa bagaimana membuat nama sketch, silahkan buka kembali Tutorial 1 sebelumnya."),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("img",{width:"80%",src:e(95608).Z,alt:"Arduino IDE Sketch Program"}))),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"Kemudian ketik program berikut pada sketch tersebut."))),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino",metastring:'title="TUTORIAL_8_SENSOR_JARAK.ino" showLineNumbers',title:'"TUTORIAL_8_SENSOR_JARAK.ino"',showLineNumbers:!0},'const int trigPin = 8;\nconst int echoPin = 9;\n\nfloat duration;\nfloat distance;\n\nvoid setup() {\nSerial.begin(9600);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\n}\n\n// repeat infinitely\nvoid loop() {\ndigitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n\ndigitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n\nduration = pulseIn(echoPin, HIGH);\n\ndistance = (duration * 0.0343) / 2;\n\nSerial.print("Jarak: ");\nSerial.println(distance);\n\ndelay(100);\n}\n')),(0,t.kt)("ol",{start:4},(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"Setelah selesai mengetik program, jalankan proses verify. Dan apabila proses verify sudah berhasil, upload lah program tersebut ke Arduino Nano.")),(0,t.kt)("li",{parentName:"ol"},(0,t.kt)("p",{parentName:"li"},"Setelah proses upload berhasil, bukalah Serial Monitor, dan amati perubahan nilai jaraknya apabila kita mendekatkan atau menjauhkan tangan kita dari Sensor Jarak."))),(0,t.kt)("br",null),(0,t.kt)("h2",{id:"penjelasan-program"},"Penjelasan Program"),(0,t.kt)("p",null,"Sekarang kita akan menjelaskan bagaimana programnya berjalan."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino",metastring:'title="TUTORIAL_8_SENSOR_JARAK.ino" showLineNumbers',title:'"TUTORIAL_8_SENSOR_JARAK.ino"',showLineNumbers:!0},'const int trigPin = 8;\nconst int echoPin = 9;\n\nfloat duration;\nfloat distance;\n\nvoid setup() {\n   // put your setup code here, to run once:\nSerial.begin(9600);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\ndigitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n\ndigitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n\nduration = pulseIn(echoPin, HIGH);\n\ndistance = (duration * 0.034) / 2;\n\nSerial.print("Jarak: ");\nSerial.println(distance);\n\ndelay(100);\n}\n')),(0,t.kt)("p",null,"Pada baris ke 1 dan baris ke 2, kita membuat dua buah variabel bernama ",(0,t.kt)("inlineCode",{parentName:"p"},"trigPin")," dan ",(0,t.kt)("inlineCode",{parentName:"p"},"echoPin"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"const int trigPin = 8;\nconst int echoPin = 9;\n")),(0,t.kt)("p",null,"Variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"trigPin")," menyimpan angka 8 karena pin Trigger Sensor Jarak terhubung pada pin 8 Arduino Nano. Begitupula variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"echoPin")," menyimpan angka 9 karena pin Echo Sensor Jarak terhubung pada pin 9 Arduino Nano. Jika kita ingin menghubungkan ke pin yang berbeda, kita cukup mengganti angka-angkanya saja."),(0,t.kt)("p",null,"Misalnya apabila kita ingin menghubungkan pin Trigger Sensor Jarak pada pin 12 Arduino Nano, kita cukup mengganti angka 8 pada variabel trigPin menjadi angka 12."),(0,t.kt)("p",null,"Kemudian pada variabel trigPin dan echoPin terdapat tipe data ",(0,t.kt)("inlineCode",{parentName:"p"},"const")," dan ",(0,t.kt)("inlineCode",{parentName:"p"},"int"),". Tipe data ",(0,t.kt)("inlineCode",{parentName:"p"},"const"),' merupakan singkatan dari "constant" yang berarti konstan dalam bahasa Indonesia. Apabila kita membuat sebuah variabel dengan tipe ',(0,t.kt)("inlineCode",{parentName:"p"},"const"),", maka isi dari variabel tersebut akan tetap dan tidak bisa berubah-ubah."),(0,t.kt)("p",null,"Misalnya variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"trigPin")," dan variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"echoPin")," yang bertipe ",(0,t.kt)("inlineCode",{parentName:"p"},"const"),", maka angka 8 yang disimpan dalam variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"trigPin")," dan angka 9 yang disimpan dalam variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"echoPin")," akan selalu tetap dan tidak akan bisa berubah selama program berjalan sampai kita mengubahnya sendiri."),(0,t.kt)("p",null,"Kemudian untuk tipe data ",(0,t.kt)("inlineCode",{parentName:"p"},"int"),' merupakan singkatan dari "integer" yang berarti bilangan bulat dalam bahasa Indonesia. Kita menggunakan tipe data ini jika ingin menyimpan bilangan bulat ke dalam suatu variabel. Bilangan bulat yang dimaksud seperti 1, 2, 4, atau 10. Jika kita ingin menyimpan bilangan desimal seperti 3.14, maka kita menggunakan tipe data ',(0,t.kt)("inlineCode",{parentName:"p"},"float"),"."),(0,t.kt)("p",null,"Kemudian pada baris 4 dan baris 5, kita membuat dua buah variabel baru bernama ",(0,t.kt)("inlineCode",{parentName:"p"},"duration")," dan ",(0,t.kt)("inlineCode",{parentName:"p"},"distance"),'. "Duration" berarti Durasi dan Distance berarti Jarak dalam bahasa Indonesia. Kita bebas memberi nama untuk variabelnya asalkan mudah diingat dan mudah dimengerti peruntukkannya.'),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"float duration;\nfloat distance;\n")),(0,t.kt)("p",null,"Perhatikan bahwa tipe data kedua variabel tersebut adalah ",(0,t.kt)("inlineCode",{parentName:"p"},"float"),". Hal ini karena kita akan membuat supaya variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"duration")," dan variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"distance")," bisa menyimpan bilangan desimal."),(0,t.kt)("p",null,"Dimana angkanya yang akan disimpan dalam variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"duration")," dan variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"distance")," tersebut? Kita akan menemukannya nanti dalam fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"loop()"),"."),(0,t.kt)("p",null,"Kemudian kita masuk dalam fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"setup()")," pada baris 7 hingga baris 12."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"void setup() {\nSerial.begin(9600);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\n}\n")),(0,t.kt)("p",null,"Dalam fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"setup()")," terdapat perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"Serial.begin(9600)")," untuk memerintahkan Arduino Nano agar memulai komunikasi serial dengan laptop pada kecepatan baudrate sebesar 9600."),(0,t.kt)("p",null,"Kemudian terdapat perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"pinMode()")," untuk menjadikan pin nomor 8 Arduino Nano sebagai OUTPUT untuk memberikan sinyal ke luar dan pin nomor 9 Arduino Nano sebagai INPUT untuk menerima sinyal yang masuk."),(0,t.kt)("p",null,"Mengapa kita tidak melihat angka 8 dan angka 9 pada fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"setup()")," tersebut?"),(0,t.kt)("p",null,"Perhatikan kembali pada baris 1 dan baris 2 bahwa kita sudah membuat variabel bernama ",(0,t.kt)("inlineCode",{parentName:"p"},"trigPin")," yang menyimpan angka 8 yang merupakan angka dari pin nomor 8 milik Arduino Nano yang terhubung dengan pin Echo Sensor Jarak."),(0,t.kt)("p",null,"Begitu pula variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"echoPin")," yang menyimpan angka 9 yang merupakan angka dari pin nomor 9 milik Arduino Nano yang terhubung dengan pin Echo Sensor Jarak."),(0,t.kt)("p",null,"Selanjutnya kita masuk ke fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"loop()"),". Fungsi loop() dimulai dari baris 14 sampai pada baris 30 dalam program."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},'void loop() {\n  // put your main code here, to run repeatedly:\ndigitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n\ndigitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n\nduration = pulseIn(echoPin, HIGH);\n\ndistance = (duration * 0.034) / 2;\n\nSerial.print("Jarak: ");\nSerial.println(distance);\n\ndelay(100);\n}\n')),(0,t.kt)("p",null,"Pada baris 16 terdapat perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"digitalWrite()")," yang memerintahkan Arduino Nano untuk memberikan sinyal ",(0,t.kt)("inlineCode",{parentName:"p"},"LOW")," ke pin ",(0,t.kt)("inlineCode",{parentName:"p"},"trigPin"),". Ingat kembali bahwa ",(0,t.kt)("inlineCode",{parentName:"p"},"trigPin")," merupakan pin nomor 8 miilik Arduino Nano dan bisa diperintahkan untuk memberikan sinyal LOW ataupun sinyal HIGH karena kita sudah mengatur pin nomor 8 sebagai OUTPUT pada fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"setup()"),"."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"digitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n")),(0,t.kt)("p",null,"Selanjutnya pada baris 17 terdapat perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"delayMicroseconds()"),". Biasanya pada tutorial-tutorial sebelumnya kita menggunakan perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"delay()"),", dimana 1000 mili sekon sama dengan 1 detik."),(0,t.kt)("p",null,"Kali ini kita menggunakan perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"delayMicroseconds(2)")," yang membuat Arduino Nano menjalankan perintah pada baris 16 sebelumnya berjalan selama 2 mikro detik."),(0,t.kt)("p",null,"Karena pin Trigger sensor jarak diberi logika ",(0,t.kt)("inlineCode",{parentName:"p"},"LOW")," selama 2 mikro detik, maka komponen T (Transmitter) pada Sensor Jarak tidak akan bisa memancarkan suara ultrasonik."),(0,t.kt)("p",null,"Barulah pada baris 19 dan baris 20, komponen Transmitter pada Sensor Jarak memancarkan suara ultrasonik selama 10 detik."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"digitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n")),(0,t.kt)("p",null,"Pada baris 19 terdapat perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"digitalWrite()")," yang memerintahkan Arduino Nano untuk memberikan logika ",(0,t.kt)("inlineCode",{parentName:"p"},"HIGH")," ke pin Trigger Sensor Jarak sehingga komponen T bisa memancarkan suara ultrasonik."),(0,t.kt)("p",null,"Dan pada baris 20 terdapat perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"delayMicroseconds(10)")," untuk menunda selama 10 mikro detik. Dengan kata lain, komponen T memancarkan suara ultraasonik selama 10 mikro detik."),(0,t.kt)("p",null,"Komponen T kemudian berhenti memancarkan suara ultrasonik tepat setelah 10 mikro detik dengan memberi logika LOW ke pin Trigger Sensor Jarak menggunakan perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"digitalWrite()")," pada baris 21."),(0,t.kt)("p",null,"Karena suara ultrasonik tadi telah dipancarkan selama 10 detik, komponen R (Receiver) pada sensor jarak kemudian menunggu suara ultrasoniknya dipantulkan kembali oleh objek/halangan di depan sensor jarak."),(0,t.kt)("p",null,"Untuk mengukur jarak antara sensor jarak dengan objek/halangan, kita perlu mengetahui berapa lama waktu yang dibutuhkan suara ultrasonik dari sejak dipancarkan oleh komponen T sampai komponen R menerima pantulan suara ultrasoniknya dari objek/halangan di depan sensor jarak."),(0,t.kt)("p",null,"Untuk mengukur waktunya, kita menggunakan fungsi spesial yang disediakan oleh Arduino IDE, yakni ",(0,t.kt)("inlineCode",{parentName:"p"},"pulseIn()"),". Fungsi ini ditemui pada baris 23. Pada dasarnya, fungsi ini tidak benar-benar mengukur waktu, melainkan mengukur panjang pulsa."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"duration = pulseIn(echoPin, HIGH);\n")),(0,t.kt)("p",null,"Fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"pulseIn()")," memiliki tiga buah parameter, yakni:"),(0,t.kt)("ul",null,(0,t.kt)("li",{parentName:"ul"},"Nomor pin yang akan dibaca panjang pulsanya."),(0,t.kt)("li",{parentName:"ul"},"Tipe pulsa yang akan dibaca. Ada dua tipe pulsa yang dapat digunakan, yakni:",(0,t.kt)("ul",{parentName:"li"},(0,t.kt)("li",{parentName:"ul"},"Pulsa dari LOW ke HIGH, atau"),(0,t.kt)("li",{parentName:"ul"},"Pulsa dari HIGH ke LOW."))),(0,t.kt)("li",{parentName:"ul"},"Waktu tunggu sebelum mulai mengukur.")),(0,t.kt)("p",null,"Parameter ketiga merupakan parameter opsional, artinya bisa digunakan, dan bisa juga tidak digunakan. Jika kita lihat kembali kode program kita pada baris 23, kita bisa lihat bahwa kita hanya menggunakan dua buah parameter."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"duration = pulseIn(echoPin, HIGH);\n")),(0,t.kt)("p",null,"Parameter pertama itu adalah nomor pin yang akan dibaca panjang pulsanya, yakni pin nomor 9 Arduino Nano (diwakili oleh variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"echoPin")," karena variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"echoPin")," menyimpan angka 9)."),(0,t.kt)("p",null,"Dan parameter kedua adalah tipe pulsa yang kita gunakan, karena kita menggunakan ",(0,t.kt)("inlineCode",{parentName:"p"},"HIGH"),", maka tipe pulsa yang kita gunakan yakni tipe pulsa dari ",(0,t.kt)("inlineCode",{parentName:"p"},"LOW")," ke ",(0,t.kt)("inlineCode",{parentName:"p"},"HIGH"),". Untuk lebih jelasnya, mari perhatikan ilustrasi berikut."),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("img",{width:"80%",src:e(5528).Z,alt:"Arduino Light Sensor Pins"})),(0,t.kt)("p",null,"Begitu sinyal naik dari LOW ke HIGH, maka akan mulai mengukur berapa lama sinyalnya pada posisi HIGH. Jika kita mengambil contoh pada ilustrasi di atas, waktu sinyal HIGH yang terukur selama 8 mikro sekon."),(0,t.kt)("p",null,"Jika kita menggunakan parameter ",(0,t.kt)("inlineCode",{parentName:"p"},"LOW")," dalam perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"pulseIn(echoPin, LOW)"),", maka tipe pulsa yang kita gunakan adalah tipe pulsa dari ",(0,t.kt)("inlineCode",{parentName:"p"},"HIGH")," ke ",(0,t.kt)("inlineCode",{parentName:"p"},"LOW"),"."),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("img",{width:"80%",src:e(85809).Z,alt:"Arduino Light Sensor Pins"})),(0,t.kt)("p",null,"Begitu sinyal turun dari LOW ke HIGH, maka akan mulai mengukur berapa lama sinyalnya pada posisi LOW. Jika kita mengambil contoh pada ilustrasi di atas, waktu sinyal LOW yang terukur selama 8 mikro sekon."),(0,t.kt)("p",null,"Mari kita perhatikan sekali lagi kode pada baris 23 di bawah"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"duration = pulseIn(echoPin, HIGH);\n")),(0,t.kt)("p",null,"Jika misalnya setelah menjalankan perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"pulseIn(echoPin, HIGH)")," untuk mengukur berapa lama sinyalnya berada pada posisi HIGH dan waktu terukur yang didapat adalah 500 \xb5s (\xb5=smikro, s=sekon), maka angka 500 ini akan disimpan dalam variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"duration"),"."),(0,t.kt)("p",null,"Setelah waktu yang dibutuhkan suara ultrasonik untuk memancar dan memantul pada objek diketahui, selanjutnya kita akan menghitung jaraknya dengan menggunakan persamaan:"),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("p",null,"Jarak = (Waktu x Kecepatan) / 2")),(0,t.kt)("p",null,"Anggaplah sebagai permisalan, waktu yang dibutuhkan suara ultrasonik merambat dan memantul sudah diketahui yakni sebesar 500 \xb5s, dan kecepatan suara ultrasonik adalah 0.0343 cm/\xb5s, maka kita masukkan data-data tersebut ke dalam persamaan sehingga menjadi:"),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("p",null,"Jarak = (500 x 0.034) / 2")),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("p",null,"Jarak = 8.5")),(0,t.kt)("p",null,"Namun, bagaimana kita menuliskannya dalam program? Mari kita perhatikan kode pada baris 25:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"distance = (duration * 0.0343) / 2;\n")),(0,t.kt)("p",null,"Simbol ",(0,t.kt)("em",{parentName:"p"}," pada program digunakan untuk menggantikan simbol x (perkalian) dalam program karena bahasa pemrograman tidak mengenali simbol kali sehingga digunakan simbol ")," untuk mengganti simbol perkalian."),(0,t.kt)("p",null,"Ingat kembali, bahwa variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"duration")," sudah menyimpan angka 500 dari kode pada baris 23 sebelumnya. Sehingga secara langsung, kode nya akan menjadi seperti di bawah ini."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"distance = (500 * 0.034) / 2;\n")),(0,t.kt)("p",null,"Hasil operaasi matematika ",(0,t.kt)("inlineCode",{parentName:"p"},"(500 * 0.0343) / 2")," jika kita hitung dengan menggunakan kalkulator, maka akan menghasilkan angka 8.5. Angka 8.5 yang merupakan hasil operasi matematika tersebut kemudian disimpan dalam variabel bernama ",(0,t.kt)("inlineCode",{parentName:"p"},"distance"),"."),(0,t.kt)("p",null,'Selanjutnya pada baris 27, akan memerintahkan Arduino Nano untuk mencetak "Jarak: " pada Serial Monitor.'),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},'Serial.print("Jarak: ");\nSerial.println(distance);\n')),(0,t.kt)("p",null,'Setelah mencetak "Jarak: " pada Serial Monitor, kemudian dilanjutkan menjalankan perintah pada baris 28, yakni mencetak data yang tersimpan dalam variabel bernama ',(0,t.kt)("inlineCode",{parentName:"p"},"distance"),". Masih ingatkah teman-teman data yang disimpan dalam variabel distance setelah menjalankan kode pada baris 25?"),(0,t.kt)("p",null,"Karena variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"distance")," sudah menyimpan angka 8.5, maka pada Serial Monitor akan dicetak angka 8.5 pula. Sehingga tampilan yang dicetak pada Serial Monitor teman-teman mungkin akan tertulis seperti ini:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"Jarak: 8.5\n")),(0,t.kt)("p",null,"Kemudian pada baris terakhir, yakni pada baris 30, terdapat perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"delay(100)")," untuk menunda selama 100 mili sekon sebelum kembali lagi ke awal fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"loop()")," yang berada pada baris 16."),(0,t.kt)("p",null,"Perhatikan pada baris 28, perintah yang digunakan adalah ",(0,t.kt)("inlineCode",{parentName:"p"},"println"),", jadi begitu angka 8.5 atau angka yang ada di dalam variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"distance")," sebelumnya sudah dicetak, maka setelah Arduino Nano menjalankan programnya lagi dari awal fungsi ",(0,t.kt)("inlineCode",{parentName:"p"},"loop()"),", dan mendapati jarak baru yang terukur sebesar 7.5, maka akan membuat baris baru di bawah nya seperti ini:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"Jarak: 8.5\nJarak: 7.5\n")),(0,t.kt)("br",null),(0,t.kt)("h2",{id:"tantangan-tutorial-8"},"Tantangan Tutorial 8"),(0,t.kt)("h3",{id:"tantangan-1"},"Tantangan 1"),(0,t.kt)("p",null,"Tantangan pertama ini akan sedikit membantu teman-teman untuk lebih memperdalam tentang perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"Serial.print")," dan ",(0,t.kt)("inlineCode",{parentName:"p"},"Serial.println")," yang akan sering kita gunakan ke depannya."),(0,t.kt)("p",null,"Masih ingat dengan kode program yang terletak pada baris 27 dan baris 28? Kita tunjukkan melalui potongan kode di bawah ini jika teman-teman agak malas untuk scroll ke atas."),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},'Serial.print("Jarak: ");\nSerial.println(distance);\n')),(0,t.kt)("p",null,'Sudah jelas, bukan? bahwa kedua perintah tersebut akan mencetak teks "Jarak: " dan angka yang tersimpan dalam variabel bernama ',(0,t.kt)("inlineCode",{parentName:"p"},"distance")," seperti di bawah ini:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"Jarak: 8.5\nJarak: 7.5\n")),(0,t.kt)("p",null,'Nah, karena satuan jarak yang kita ukur dalam satuan Centimeter, sekarang bagaimana caranya jika kita ingin menambahkan satuan "cm" setelah angka 8.5 atau 7.5 menjadi seperti contoh di bawah ini:'),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"Jarak: 8.5 Cm\nJarak: 7.5 Cm\n")),(0,t.kt)("p",null,"Kita beri petunjuk yaa. Perhatikan baris 27 sampai baris 29 yang diterangi dalam Kode 1, Kode 2, dan Kode 3 di bawah ini. Cobalah mengganti perintah yang ada pada baris 27 sampai baris 29 dengan salah satu dari ketiga kode ini kemudian upload dan lihatlah hasilnya pada Serial Monitor."),(0,t.kt)("p",null,"Kira-kira kode nomor berapakah yang paling mendekati dengan contoh di atas? Kode 1, Kode 2, atau Kode 3?"),(0,t.kt)(r.Z,{className:"unique-tabs",mdxType:"Tabs"},(0,t.kt)(l.Z,{value:"Kode 1",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino",metastring:"showLineNumbers",showLineNumbers:!0},'const int trigPin = 8;\nconst int echoPin = 9;\n\nfloat duration;\nfloat distance;\n\nvoid setup() {\n  // put your setup code here, to run once:\nSerial.begin(9600);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\ndigitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n\ndigitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n\nduration = pulseIn(echoPin, HIGH);\n\ndistance = (duration * 0.034) / 2;\n\n//highlight-start\nSerial.print("Jarak: ");\nSerial.println(distance);\nSerial.print("Cm")\n//highlight-end\n\ndelay(100);\n}\n'))),(0,t.kt)(l.Z,{value:"Kode 2",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino",metastring:"showLineNumbers",showLineNumbers:!0},'const int trigPin = 8;\nconst int echoPin = 9;\n\nfloat duration;\nfloat distance;\n\nvoid setup() {\n  // put your setup code here, to run once:\nSerial.begin(9600);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\ndigitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n\ndigitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n\nduration = pulseIn(echoPin, HIGH);\n\ndistance = (duration * 0.034) / 2;\n\n//highlight-start\nSerial.print("Jarak: ");\nSerial.print(distance);\nSerial.println("Cm")\n//highlight-end\n\ndelay(100);\n}\n'))),(0,t.kt)(l.Z,{value:"Kode 3",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino",metastring:"showLineNumbers",showLineNumbers:!0},'const int trigPin = 8;\nconst int echoPin = 9;\n\nfloat duration;\nfloat distance;\n\nvoid setup() {\n  // put your setup code here, to run once:\nSerial.begin(9600);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\ndigitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n\ndigitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n\nduration = pulseIn(echoPin, HIGH);\n\ndistance = (duration * 0.034) / 2;\n\n//highlight-start\nSerial.print("Jarak: ");\nSerial.print(distance);\nSerial.println(" Cm")\n//highlight-end\n\ndelay(100);\n}\n')))),(0,t.kt)("p",null,"Yap, kalau teman-teman berhasil menemukan jawaban nya, perhatikan bahwa perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"Serial.println"),' diletakkan pada paling terkahir setelah teks " Cm" di tulis.'),(0,t.kt)("p",null,"Karena kita ingin membuat baris baru di bawah untuk hasil pengukuran baru setelah hasil pengukuran jarak sebelumnya ditulis pada baris di atasnya sebelumnya."),(0,t.kt)("p",null,'Kalau teman-teman masih penasaran. Lihatlah apa yang terjadi jika kita menghapus karakter spasi pada teks " Cm" menjadi "Cm".'),(0,t.kt)("h3",{id:"tantangan-2"},"Tantangan 2"),(0,t.kt)("p",null,"Setelah memahami lebih dalam mengenai perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"Serial.print")," dan ",(0,t.kt)("inlineCode",{parentName:"p"},"Serial.println")," melalui Tantangan 2 tadi, kali ini kita mau memberi tantangan yang bisa memperdalam pengetahuan teman-teman pada urutan prioritas matematika."),(0,t.kt)("p",null,"Masihkah teman-teman ingat tentang urutan prioritas dalam pengerjaan sebuah soal matematika? Seperti pada contoh di bawah ini:"),(0,t.kt)("p",{align:"center",width:"100%"},(0,t.kt)("p",null,"(21x2+4)/2")),(0,t.kt)("p",null,"Jika kita hitung dengan kalkulator, maka hasilnya pasti 24. Jika kita perhatikan tanda kurung di pada soal matematika di atas, itu berarti kita harus menyelesaikan perhitungan yang ada dalam tanda kurung tersebut terlebih dahulu barulah kemudian dibagi dengan 2."),(0,t.kt)("p",null,"Nah, dalam bahasa pemrograman juga berlaku aturan tersebut. Seperti yang kita temukan pada baris 25 dalam program Tutorial 8 di bawah ini:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"distance = (duration * 0.034) / 2;\n")),(0,t.kt)("p",null,"Anggaplah variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"duration")," menyimpan nilai 500, maka kita harus menyelesaikan perkalian antara 500 dengan dengan angka 0.0034. Mengapa demikian? hal ini karena perkalian antara 500 dengan 0.034 berada dalam tanda kurung sehingga merupakan prioritas yang harus dikerjakan terlebih dahulu."),(0,t.kt)("p",null,"Hasil perkalian antara 500 dengan 0.034 kemudian dibagi dengan 2. Barulah hasil keseluruhannya disimpan dalam variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"distance"),"."),(0,t.kt)("p",null,"Nah, setelah memahami prioritas pengerjaan dalam bahasa pemrograman, sekarang kita akan mencoba hal baru menggunakan aturan prioritas tadi. Jika teman-teman perhatikan baris program yang diterangi di bawah ini:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino",metastring:'title="TUTORIAL_8_SENSOR_JARAK.ino" showLineNumbers',title:'"TUTORIAL_8_SENSOR_JARAK.ino"',showLineNumbers:!0},'const int trigPin = 8;\nconst int echoPin = 9;\n\nfloat duration;\nfloat distance;\n\nvoid setup() {\n   // put your setup code here, to run once:\nSerial.begin(9600);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\ndigitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n\ndigitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n\n//highlight-start\nduration = pulseIn(echoPin, HIGH);\n//highlight-end\n\ndistance = (duration * 0.034) / 2;\n\nSerial.print("Jarak: ");\nSerial.print(distance);\nSerial.println(" Cm")\n\ndelay(100);\n}\n')),(0,t.kt)("p",null,"Jika teman-teman masih ingat, perintah pada baris 23 tersebut digunakan untuk menghitung lama waktu suara ultrasonik merambat di udara, kemudian menyimpannya ke dalam variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"duration"),"."),(0,t.kt)("p",null,"Nah, kali ini, bagaimana jika kita tidak menyimpannya ke dalam variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"duration"),", melainkan langsung memasukkannya ke dalam persamaan pada baris 25? Bagaimana caranya?"),(0,t.kt)("p",null,"Kita akan menerapkan aturan urutan prioritas yang telah dijelaskan sebelumnya ke dalam program seperti ini:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"distance = ( (masukkan perintah untuk menghitung waktu rambat suara utrasonik disini) * 0.034) / 2;\n")),(0,t.kt)("p",null,"Perhatikan bahwa kita mengapitnya dalam tanda kurung ( ) untuk menyatakan bahwa kita harus menghitung waktunya terlebih dahulu sebelum dilakukan perkalian dengan 0.034. Kira-kira apa perintah yang kita gunakan untuk menghitung waktu rambat suara ultrasonik yang dimaksud dalam tanda kurung tersebut?"),(0,t.kt)("p",null,"Jawabannya ada pada baris 23, yakni ",(0,t.kt)("inlineCode",{parentName:"p"},"pulseIn(echoPin, HIGH)"),". Kita masukkan perintah tersebut ke dalam tanda kurung tersebut sehingga akan menjadi seperti pada di bawah ini:"),(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino"},"distance = ( (pulseIn(echoPin, HIGH)) * 0.034) / 2;\n")),(0,t.kt)("p",null,"Kemudian kita akan menghapus seluruh kode pada baris 4 karena kita tidak memerlukan variabel ",(0,t.kt)("inlineCode",{parentName:"p"},"duration")," lagi dan juga menghapus seluruh kode pada baris 23 karena kita sudah memindahkan perintah untuk membaca waktu tempuh suara ultrasonik ke dalam persamaan. Sehingga keseluruhan programnya akan menjadi seperti di bawah ini:"),(0,t.kt)(r.Z,{className:"unique-tabs",mdxType:"Tabs"},(0,t.kt)(l.Z,{value:"Sebelum dipindahkan dan dihapus",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino",metastring:"showLineNumbers",showLineNumbers:!0},'const int trigPin = 8;\nconst int echoPin = 9;\n\n//highlight-start\nfloat duration;\n//highlight-end\nfloat distance;\n\nvoid setup() {\n  // put your setup code here, to run once:\nSerial.begin(9600);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\ndigitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n\ndigitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n\n//highlight-start\nduration = pulseIn(echoPin, HIGH);\n\ndistance = (duration * 0.034) / 2;\n//highlight-end\n\nSerial.print("Jarak: ");\nSerial.print(distance);\nSerial.println(" Cm")\n\ndelay(100);\n}\n'))),(0,t.kt)(l.Z,{value:"Setelah dipindahkan dan dihapus",mdxType:"TabItem"},(0,t.kt)("pre",null,(0,t.kt)("code",{parentName:"pre",className:"language-arduino",metastring:"showLineNumbers",showLineNumbers:!0},'const int trigPin = 8;\nconst int echoPin = 9;\n\nfloat distance;\n\nvoid setup() {\n  // put your setup code here, to run once:\nSerial.begin(9600);\npinMode(trigPin, OUTPUT);\npinMode(echoPin, INPUT);\n}\n\nvoid loop() {\n  // put your main code here, to run repeatedly:\ndigitalWrite(trigPin, LOW);\ndelayMicroseconds(2);\n\ndigitalWrite(trigPin, HIGH);\ndelayMicroseconds(10);\ndigitalWrite(trigPin, LOW);\n\n//highlight-start\ndistance = ( (pulseIn(echoPin, HIGH)) * 0.034) / 2;\n//highlight-end\n\nSerial.print("Jarak: ");\nSerial.print(distance);\nSerial.println(" Cm")\n\ndelay(100);\n}\n')))),(0,t.kt)("p",null,"Cobalah teman-teman ketik dan upload program di atas, kemudian lihat hasilnya pada Serial Monitor. Kita akan mendapati hasilnya sama seperti sebelum dipindahkan. Namun kode program kita menjadi lebih singkat bukan?"),(0,t.kt)("p",null,"Pada program yang telah dimodifikasi tersebut, pada baris 22, karena perintah ",(0,t.kt)("inlineCode",{parentName:"p"},"pulseIn(echoPin, HIGH)")," berada dalam tanda kurung, maka perintah tersebut dieksekusi terlebih dahulu. Kemudian hasil perintah tersebut dikali dengan angka 0.034."),(0,t.kt)("p",null,"Kini teman-teman telah mengetahui tentang urutan prioritas pengerjaan matematika dalam bahasa pemrograman menggunakan tanda kurung () dalam sebuah persamaan matematika."),(0,t.kt)("p",null,"Ini penting untuk diketahui agar teman-teman tidak ambigu dalam penggunaan tanda kurung () karena kita akan sering menggunakan tanda kurung, baik untuk menentukan urutan prioritas pengerjaan matematika ataupun untuk hal lainnya seperti membuat fungsi sendiri, yang mana akan kita pelajari dalam tutorial 9 berikutnya."))}g.isMDXComponent=!0},58872:(a,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"assets/images/tutorial-8-0-bouncing-sound-73a49db74c6168a638b11b8bf6e1b2c3.png"},91703:(a,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"assets/images/tutorial-8-1-bouncing-sound-bdc559920264341bda84e7f3886d551a.png"},73998:(a,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"assets/images/tutorial-8-2-bouncing-sound-17c28c0adef533bc1a02bdea1c6f37dc.png"},25734:(a,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"assets/images/tutorial-8-3-bouncing-sound-9ed422c9c3e8dc5e3e4364a528951583.png"},45854:(a,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"assets/images/tutorial-8-4-bouncing-sound-ce4d05d810eab26fbcf594d8d0f242fa.png"},58597:(a,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"assets/images/tutorial-8-5-wiring-diagram-a4c4b1301869b99283a1d44c39619ca8.png"},95608:(a,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"assets/images/tutorial-8-6-new-sketch-dd9672b6f51e26c6861c40058dd890b5.png"},5528:(a,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"assets/images/tutorial-8-7-LOW-HIGH-516393bcc7f3df1caa94df73795da5a2.png"},85809:(a,n,e)=>{e.d(n,{Z:()=>i});const i=e.p+"assets/images/tutorial-8-8-HIGH-LOW-233a7c3ca613d1a3313ab5d274b3fc21.png"}}]);